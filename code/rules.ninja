# This defines the rules on how to build parts of the wordfreq lists, using the
# Ninja build system:
#
#   http://martine.github.io/ninja/manual.html
#
# Ninja is available in the 'ninja-build' Ubuntu package. It's like make with
# better parallelism and the ability for build steps to produce multiple
# outputs. The tradeoff is that its rule syntax isn't full of magic for
# expanding wildcards and finding dependencies, so in general you have to
# write the dependencies using a script.
#
# This file will become the header of the larger build.ninja file, which also
# contains the programatically-defined dependency graph.

pool memory_hogs
  depth = 1

rule glove_to_labels
  command = LANG=C cut -d" " -f1 $in >$out

rule glove_to_vecs
  command = LANG=C cut -d" " -f2- $in | python -m conceptnet_retrofitting.builders.build_vecs $out
  pool = memory_hogs

rule w2v_to_vecs
  command = python -m conceptnet_retrofitting.builders.build_w2v_vecs $in $out
  pool = memory_hogs

rule assoc_to_labels
  command = cut -f1 $in | sort | uniq > $out

rule filter_assoc_neg
  command = egrep -v '$filter' $in > $out

rule filter_assoc_pos
  command = egrep '$filter' $in > $out

rule filter_vecs
  command = python -m conceptnet_retrofitting.builders.filter_vecs $in $out
  pool = memory_hogs

rule standardize_vecs
  command = python -m conceptnet_retrofitting.builders.standardize_vecs $in $out
  pool = memory_hogs

rule standardize_assoc
  command = python -m conceptnet_retrofitting.builders.standardize_assoc $in $out

rule merge_interpolate
  command = python -m conceptnet_retrofitting.builders.merge_interpolate $in $out
  pool = memory_hogs

rule concatenate
  command = cat $in > $out

rule l1_normalize
  command = python -m conceptnet_retrofitting.builders.l1norm $in $out
  pool = memory_hogs

rule l2_normalize
  command = python -m conceptnet_retrofitting.builders.l2norm $in $out
  pool = memory_hogs

rule network_to_assoc
  command = python -m conceptnet_retrofitting.builders.build_assoc $in $out

rule add_self_loops
  command = python -m conceptnet_retrofitting.builders.self_loops $in $out

rule retrofit
  command = python -m conceptnet_retrofitting.builders.retrofit $in $out
  pool = memory_hogs

rule test
  command = python -m conceptnet_retrofitting.evaluation.wordsim $in >$out

rule tests_to_latex
  command = python -m conceptnet_retrofitting.evaluation.latex_results $in $out

rule rebuild_ninja
  command = python -m ninja

build build.ninja: rebuild_ninja | ninja.py rules.ninja

build build-data/combo840.standardized.labels build-data/combo840.none.standardized.npy: merge_interpolate build-data/glove12.840B.300d.standardized.labels build-data/glove12.840B.300d.l1.standardized.npy build-data/w2v-google-news.standardized.labels build-data/w2v-google-news.l1.standardized.npy build-data/conceptnet5.raw.labels

build build-data/combo42.standardized.labels build-data/combo42.none.standardized.npy: merge_interpolate build-data/glove.42B.300d.standardized.labels build-data/glove.42B.300d.l1.standardized.npy build-data/w2v-google-news.standardized.labels build-data/w2v-google-news.l1.standardized.npy build-data/conceptnet5.raw.labels
